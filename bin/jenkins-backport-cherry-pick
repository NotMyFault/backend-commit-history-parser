#!/bin/bash
# Usage:
#
# Run jenkins-backport-generate-list to generate the candidate changes first.
# once the list is built, use this script like 'jenkins-backport-cherry-pick JENKINS-12345'
# to cherry pick all the commits related to the change.

for c in $(cat cherry-pick/$1); do
  echo Cherry picking $c
  git cherry-pick -x $c || (
    # merge failed
    # first, automatically resolve changelog.html conflict, in case that's the conflict (and this happens a lot)
    git checkout --ours changelog.html
    git add changelog.html
    
    # record where we cherry-picked from, even in case of a merge conflict
    msg=/tmp/commit-msg.$$
    git log -1 --pretty=%s%n%n%b $c > $msg
    echo "" >> $msg
    echo "Cherry-picked-from: $c" >> $msg
    
    # otherwise keep asking the user to resolve conflicts
    while (git status --porcelain | grep '\(^U.\)\|\(^.U\)' > /dev/null); do
      git status
      echo =================================================================
      echo please resolve conflicts. when done, exit the shell without commiting to continue
      echo to abort, "exit 1"
      echo =================================================================
      $SHELL -i || exit $?
    done

    echo committing
    # if the commit fails, abort right then
    git commit --allow-empty -F $msg || exit $?
  )
done
echo Done cherry picking $1
